version: "3.9"
   
services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  api:
    build:
      context: ./api/
      dockerfile: Dockerfile
    command: bash -c "python check_db.py --service-name db --ip db --port 5432 &&
                      python manage.py migrate &&
                      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db

  apitest:
    build:
      context: ./api/
      dockerfile: Dockerfile
    command: bash -c "python check_db.py --service-name db --ip db --port 5432 &&
                      python manage.py migrate &&
                      python manage.py test"
    volumes:
      - .:/app
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    command: npm start
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    depends_on:
      - api

  frontendtest:
    container_name: frontend-test
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    command: npm test
    volumes:
      - .:/app
    environment:
      - CI=true
